{
    "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.tlang",
    "name": "tlang",
    "scopeName": "source.t",
    "patterns": [
        {
            "include": "#keywords"
        },
        {
            "include": "#types"
        },
        {
            "include": "#strings"
        },
        {
            "include": "#numbers"
        },
        {
            "include": "#identifiers"
        },
        {
            "include": "#comment"
        }
    ],
    "repository": {
        "keywords": {
            "patterns": [
                {
                    "name": "keyword.control.tlang",
                    "match": "\\b(if|while|for|return)\\b"
                },
                {
                    "name": "storage.modifier.tlang",
                    "match": "\\b(extern)\\b"
                },
                {
                    "name": "storage.type.built-in.primitive.tlang",
                    "match": "\\b(u?int[0-9]*|float[0-9]*|bool|void|string)\\b"
                }
            ]
        },
        "strings": {
            "name": "string.quoted.double.tlang",
            "begin": "\"",
            "end": "\"",
            "patterns": [
                {
                    "name": "constant.character.escape.tlang",
                    "match": "\\\\."
                }
            ]
        },
        "types": {
            "match": "([a-zA-Z_][a-zA-Z0-9_]*)(?:\\s|\\*+)\\s*(?:([a-zA-Z_][a-zA-Z0-9_]*\\s*\\()|([a-zA-Z_][a-zA-Z0-9_]*\\b))",
            "captures": {
                "1": {
                    "name": "entity.name.type.tlang"
                },
                "3": {
                    "name": "variable.tlang"
                },
                "2": {
                    "name": "entity.name.function.tlang"
                }
            }
        },
        "comment": {
            "patterns": [
                {
                    "name": "comment.block.documentation.tlang",
                    "begin": "/\\*\\*(?!/)",
                    "beginCaptures": {
                        "0": {
                            "name": "punctuation.definition.comment.tlang"
                        }
                    },
                    "end": "\\*/",
                    "endCaptures": {
                        "0": {
                            "name": "punctuation.definition.comment.tlang"
                        }
                    }
                },
                {
                    "name": "comment.block.tlang",
                    "begin": "(/\\*)(?:\\s*((@)internal)(?=\\s|(\\*/)))?",
                    "beginCaptures": {
                        "1": {
                            "name": "punctuation.definition.comment.tlang"
                        },
                        "2": {
                            "name": "storage.type.internaldeclaration.tlang"
                        },
                        "3": {
                            "name": "punctuation.decorator.internaldeclaration.tlang"
                        }
                    },
                    "end": "\\*/",
                    "endCaptures": {
                        "0": {
                            "name": "punctuation.definition.comment.tlang"
                        }
                    }
                },
                {
                    "begin": "(^[ \\t]+)?((//)(?:\\s*((@)internal)(?=\\s|$))?)",
                    "beginCaptures": {
                        "1": {
                            "name": "punctuation.whitespace.comment.leading.tlang"
                        },
                        "2": {
                            "name": "comment.line.double-slash.tlang"
                        },
                        "3": {
                            "name": "punctuation.definition.comment.tlang"
                        },
                        "4": {
                            "name": "storage.type.internaldeclaration.tlang"
                        },
                        "5": {
                            "name": "punctuation.decorator.internaldeclaration.tlang"
                        }
                    },
                    "end": "(?=$)",
                    "contentName": "comment.line.double-slash.tlang"
                }
            ]
        },
        "numbers": {
            "match": "(?<!\\w)\\d(?:(?:[0-9a-zA-Z_\\.]|')|(?<=[eEpP])[+-])*",
            "name": "constant.numeric.tlan"
        },
        "identifiers": {
            "patterns": [
                {
                    "name": "entity.name.function.tlang",
                    "match": "[a-zA-Z_][a-zA-Z0-9_]*(?=\\s*\\()"
                },
                {
                    "name": "variable.tlang",
                    "match": "[a-zA-Z_][a-zA-Z0-9_]*"
                }
            ]
        }
    }
}